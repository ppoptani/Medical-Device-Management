/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.hospital;

import business.enterprise.HospitalEnterprise;
import business.network.Network;
import business.useraccount.UserAccount;
import business.utility.EnumTypes;
import business.workarea.NewSurgeryWorkRequest;
import business.workarea.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pu
 */
public class ManageSurgeryApprovalsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageSurgeryApprovalsJPanel
     */
    private JPanel userProcessContainer;
    private HospitalEnterprise enterprise;
    private Network network;
    private UserAccount userAccount;

    public ManageSurgeryApprovalsJPanel(JPanel userProcessContainer, Network network, HospitalEnterprise enterprise, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.network = network;
        this.userAccount = userAccount;
        populateTable();
    }

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) pendingApprovalJTable.getModel();
        dtm.setRowCount(0);
        for (WorkRequest workRequest : enterprise.getWorkQueue().getWorkRequests()) {
            NewSurgeryWorkRequest surgeryWorkRequest = (NewSurgeryWorkRequest) workRequest;

            Object[] rows = new Object[3];
            rows[0] = surgeryWorkRequest;
            rows[1] = surgeryWorkRequest.getRequestDate();
            rows[2] = surgeryWorkRequest.getStatus();

            dtm.addRow(rows);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        proceedApproveJButton = new javax.swing.JButton();
        rejectJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        approvalJPanel = new javax.swing.JPanel();
        messageJLabel = new javax.swing.JLabel();
        messageJTextField = new javax.swing.JTextField();
        approveJButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        pendingApprovalJTable = new javax.swing.JTable();
        schedulingJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        proceedApproveJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        proceedApproveJButton.setText("Proceed to Approve");
        proceedApproveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedApproveJButtonActionPerformed(evt);
            }
        });

        rejectJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rejectJButton.setText("Reject");
        rejectJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectJButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Surgery Approvals:");

        backJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        approvalJPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        approvalJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        messageJLabel.setText("Message:");
        messageJLabel.setEnabled(false);
        approvalJPanel.add(messageJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 112, 25));

        messageJTextField.setEnabled(false);
        approvalJPanel.add(messageJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 232, 25));

        approveJButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        approveJButton3.setText("Approve");
        approveJButton3.setEnabled(false);
        approveJButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveJButton3ActionPerformed(evt);
            }
        });
        approvalJPanel.add(approveJButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 104, -1));

        pendingApprovalJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Requested on", "Status"
            }
        ));
        jScrollPane1.setViewportView(pendingApprovalJTable);

        schedulingJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        schedulingJButton.setText("Schedule Request");
        schedulingJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schedulingJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Surgery Approvals");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(approvalJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(158, 158, 158))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(proceedApproveJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(44, 44, 44)
                                    .addComponent(rejectJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(67, 67, 67)
                                    .addComponent(refreshJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50)
                                    .addComponent(schedulingJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(41, 41, 41))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(proceedApproveJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rejectJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(schedulingJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(approvalJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void proceedApproveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedApproveJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = pendingApprovalJTable.getSelectedRow();

        if (selectedRow < 0) {

            JOptionPane.showMessageDialog(null, "Select the request first.");
            return;
        }

        NewSurgeryWorkRequest surgeryWorkRequest = (NewSurgeryWorkRequest) pendingApprovalJTable.getValueAt(selectedRow, 0);

        if (!surgeryWorkRequest.getStatus().equals(EnumTypes.ReservationStatusType.Reserved.getValue())) {
            JOptionPane.showMessageDialog(null, "Please reserve the surgery first.");
            return;
        }

        if (surgeryWorkRequest.getStatus().equals(WorkRequest.StatusType.Reject.getValue())) {
            JOptionPane.showMessageDialog(null, "Request is rejected, cant be approved.");
            return;
        }

        approvalJPanelAction(true);

    }//GEN-LAST:event_proceedApproveJButtonActionPerformed

    private void rejectJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectJButtonActionPerformed
        // TODO add your handling code here:
        approvalJPanelAction(false);
        int selectedRow = pendingApprovalJTable.getSelectedRow();

        if (pendingApprovalJTable.getSelectedRowCount() > 0) {
            NewSurgeryWorkRequest request = (NewSurgeryWorkRequest) pendingApprovalJTable.getValueAt(selectedRow, 0);
            
             if (request.getStatus().equals(WorkRequest.StatusType.Approved.getValue())) {
                JOptionPane.showMessageDialog(null, "Request already approved cannnot reject!!.");
                return;
            }

            if (request.getStatus().equals(EnumTypes.ReservationStatusType.Reserved.getValue())) {
                JOptionPane.showMessageDialog(null, "Reserved. cannnot reject.");
                return;
            }
            
            
            request.setStatus(WorkRequest.StatusType.Reject.getValue());
            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Select the request first.");
        }
    }//GEN-LAST:event_rejectJButtonActionPerformed

    private void approvalJPanelAction(boolean flag) {
        messageJTextField.setEnabled(flag);
        approveJButton3.setEnabled(flag);
        messageJLabel.setEnabled(flag);
    }

    private void clearFields() {
        messageJTextField.setText("");
    }

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void approveJButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveJButton3ActionPerformed
        // TODO add your handling code here:
        approvalJPanelAction(false);
        int selectedRow = pendingApprovalJTable.getSelectedRow();

        if (pendingApprovalJTable.getSelectedRowCount() > 0) {
            NewSurgeryWorkRequest request = (NewSurgeryWorkRequest) pendingApprovalJTable.getValueAt(selectedRow, 0);
            request.setStatus(WorkRequest.StatusType.Approved.getValue());
            request.setMessage(messageJTextField.getText());
            approvalJPanelAction(false);
            clearFields();
            populateTable();
        }
    }//GEN-LAST:event_approveJButton3ActionPerformed

    private void schedulingJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schedulingJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = pendingApprovalJTable.getSelectedRow();

        if (pendingApprovalJTable.getSelectedRowCount() > 0) {
            NewSurgeryWorkRequest request = (NewSurgeryWorkRequest) pendingApprovalJTable.getValueAt(selectedRow, 0);

            if (request.getStatus().equals(EnumTypes.ReservationStatusType.Reserved.getValue())) {
                JOptionPane.showMessageDialog(null, "Already reserved");
                return;
            }

            if (request.getStatus().equals(WorkRequest.StatusType.Reject.getValue())) {
                JOptionPane.showMessageDialog(null, "Request is rejected, cant be scheduled.");
                return;
            }

            SchedulingWorkAreaJPanel schedulingWorkAreaJPanel = new SchedulingWorkAreaJPanel(userProcessContainer, network, enterprise, request, userAccount);
            userProcessContainer.add("SchedulingWorkAreaJPanel", schedulingWorkAreaJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Select the request first.");
        }
    }//GEN-LAST:event_schedulingJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        // TODO add your handling code here:
        approvalJPanelAction(false);
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel approvalJPanel;
    private javax.swing.JButton approveJButton3;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel messageJLabel;
    private javax.swing.JTextField messageJTextField;
    private javax.swing.JTable pendingApprovalJTable;
    private javax.swing.JButton proceedApproveJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton rejectJButton;
    private javax.swing.JButton schedulingJButton;
    // End of variables declaration//GEN-END:variables
}
