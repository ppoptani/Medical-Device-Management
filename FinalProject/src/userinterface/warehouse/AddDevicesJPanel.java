/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.warehouse;

import business.enterprise.DistributorEnterprise;
import business.order.Order;
import business.order.OrderItem;
import business.model.Category;
import business.model.CategoryCatalog;
import business.model.Device;
import business.model.Product;
import business.useraccount.UserAccount;
import business.utility.EnumTypes.DeviceStatusType;
import business.utility.ValidatingFields;
import business.workarea.WorkRequest.StatusType;
import java.awt.CardLayout;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author pu
 */
public class AddDevicesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddDevicesJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private DistributorEnterprise enterprise;
    private CategoryCatalog categoryCatalog;

    public AddDevicesJPanel(JPanel userProcessContainer, DistributorEnterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        populateCategoryComboBox();
        populateProductComboBox();
        populateOperationalStatusBox();
    }

    public void populateCategoryComboBox() {
        categoryJComboBox.removeAllItems();

        for (Category category : enterprise.getCategoryCatalog().getCategories()) {
            categoryJComboBox.addItem(category);
        }
    }

    public void populateOperationalStatusBox() {
        operationalStatusJComboBox.removeAllItems();
        operationalStatusJComboBox.setModel(new DefaultComboBoxModel(DeviceStatusType.values()));
    }

    public void populateProductComboBox() {
        productsJComboBox.removeAllItems();

        for (Order order : enterprise.getCatalog().getMasterOrderCatalog()) {
            if (order.getStatus().equals(StatusType.Approved.getValue())) {
                for (OrderItem item : order.getOrderItemList()) {
                    productsJComboBox.addItem(item);
                }                
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        errorOperationalstatusJLabel = new javax.swing.JLabel();
        devicePositionJTextField = new javax.swing.JTextField();
        errorServiceReqJLabel = new javax.swing.JLabel();
        currentLocationJTextField = new javax.swing.JTextField();
        deviceIdJTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        errorDevicepositionJLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        AddDeviceJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        errormaxUsabilityJLabel = new javax.swing.JLabel();
        errorCurrentLocationJLabel = new javax.swing.JLabel();
        usabilityCountJTextField = new javax.swing.JTextField();
        productsJComboBox = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        categoryJComboBox = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reqDescriptionjTextArea = new javax.swing.JTextArea();
        errorProductJLabel = new javax.swing.JLabel();
        errorCategoryJLabel = new javax.swing.JLabel();
        operationalStatusJComboBox = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Device position in Ware House:");

        jLabel8.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("service Requirement \nDescription");

        errorOperationalstatusJLabel.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        errorOperationalstatusJLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorOperationalstatusJLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        devicePositionJTextField.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        devicePositionJTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        errorServiceReqJLabel.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        errorServiceReqJLabel.setForeground(new java.awt.Color(204, 0, 0));
        errorServiceReqJLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        currentLocationJTextField.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        currentLocationJTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        currentLocationJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentLocationJTextFieldActionPerformed(evt);
            }
        });

        deviceIdJTextField.setEditable(false);
        deviceIdJTextField.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        deviceIdJTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        deviceIdJTextField.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Operational Status:");

        jLabel6.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Current Location:");

        errorDevicepositionJLabel.setForeground(new java.awt.Color(255, 0, 0));

        jLabel5.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Max Usability Count:");

        jLabel4.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Device Id:");

        jLabel1.setFont(new java.awt.Font("Arial Unicode MS", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add New Device");

        AddDeviceJButton.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        AddDeviceJButton.setText(" Add Device");
        AddDeviceJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddDeviceJButtonActionPerformed(evt);
            }
        });

        backJButton.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        errormaxUsabilityJLabel.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        errormaxUsabilityJLabel.setForeground(new java.awt.Color(204, 0, 0));
        errormaxUsabilityJLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        errorCurrentLocationJLabel.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        errorCurrentLocationJLabel.setForeground(new java.awt.Color(204, 0, 0));
        errorCurrentLocationJLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        usabilityCountJTextField.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        usabilityCountJTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        productsJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        productsJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productsJComboBoxActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Available Products:");

        categoryJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        categoryJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryJComboBoxActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Arial Unicode MS", 1, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Select Category:");

        reqDescriptionjTextArea.setColumns(20);
        reqDescriptionjTextArea.setRows(5);
        jScrollPane1.setViewportView(reqDescriptionjTextArea);

        errorProductJLabel.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        errorProductJLabel.setForeground(new java.awt.Color(204, 0, 0));
        errorProductJLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        errorCategoryJLabel.setFont(new java.awt.Font("Arial Unicode MS", 0, 12)); // NOI18N
        errorCategoryJLabel.setForeground(new java.awt.Color(204, 0, 0));
        errorCategoryJLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        operationalStatusJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(20, 20, 20)
                                .addComponent(categoryJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(20, 20, 20)
                                .addComponent(jScrollPane1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deviceIdJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(productsJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(currentLocationJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(20, 20, 20)
                                .addComponent(usabilityCountJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(errorServiceReqJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(errorCurrentLocationJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(errormaxUsabilityJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(errorProductJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(errorCategoryJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(devicePositionJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(operationalStatusJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(errorOperationalstatusJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(errorDevicepositionJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(117, 117, 117))
            .addGroup(layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(AddDeviceJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(198, 198, 198))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(categoryJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(errorCategoryJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(productsJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(errorProductJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deviceIdJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(currentLocationJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(errorCurrentLocationJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usabilityCountJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errormaxUsabilityJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorServiceReqJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorDevicepositionJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(devicePositionJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddDeviceJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(errorOperationalstatusJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(operationalStatusJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(59, 59, 59))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void currentLocationJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentLocationJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currentLocationJTextFieldActionPerformed

    private void AddDeviceJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddDeviceJButtonActionPerformed
        // TODO add your handling code here:

        if (isValidFieldsValue()) {
            try {
                OrderItem item = (OrderItem) productsJComboBox.getSelectedItem();
                for (int i = 0; i < item.getQuantity(); i++) {
                    Device device = enterprise.getDevicesCatalog().addDevice();
                    deviceValues(device);
                }
                for (Order order : enterprise.getCatalog().getMasterOrderCatalog()) {
                    if (order.getStatus().equals(StatusType.Approved.getValue())) {
                        order.setStatus(StatusType.Completed.getValue());
                    }
                }

                JOptionPane.showMessageDialog(null, "Product added successfully!!");

            } catch (Exception exception) {
                JOptionPane.showMessageDialog(null, "Enter valid values");
            }
        }
    }//GEN-LAST:event_AddDeviceJButtonActionPerformed

    private void deviceValues(Device device) {
        device.setCategory((Category) categoryJComboBox.getSelectedItem());
        OrderItem item = (OrderItem) productsJComboBox.getSelectedItem();
        Product product = item.getProduct();
        device.setProduct(product);
        device.setDevicePositionInWareHouse(devicePositionJTextField.getText());
        device.setMaxUsabilityCount(Integer.parseInt(usabilityCountJTextField.getText()));
        device.setMaxUsabilityCountRemaining(Integer.parseInt(usabilityCountJTextField.getText()));
        device.setCurrentLocation(currentLocationJTextField.getText());
        device.setServiceRequirementDescription(reqDescriptionjTextArea.getText());
        DeviceStatusType deviceStatusType = (DeviceStatusType) operationalStatusJComboBox.getSelectedItem();
        device.setOperationalStatus(deviceStatusType.getValue());
        device.setAvailability(item.getQuantity());
        Calendar cal = Calendar.getInstance();
        device.setPurchasedDate(cal.getTime());
        cal.add(Calendar.MONTH, product.getWarrantyPeriod());
        device.setExpirationDate(cal.getTime());
    }

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void productsJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productsJComboBoxActionPerformed
        // TODO add your handling code here:     
    }//GEN-LAST:event_productsJComboBoxActionPerformed

    private void categoryJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryJComboBoxActionPerformed

    public boolean isValidFieldsValue() {
        boolean isValid = true;
        if (ValidatingFields.isComboBoxValid(categoryJComboBox)) {
            errorCategoryJLabel.setText("Select category.");
            isValid = false;
        } else {
            errorCategoryJLabel.setText("");
        }

        if (ValidatingFields.isComboBoxValid(productsJComboBox)) {
            errorProductJLabel.setText("Select Product.");
            isValid = false;
        } else {
            errorProductJLabel.setText("");
        }

        if (ValidatingFields.isComboBoxValid(operationalStatusJComboBox)) {
            errorOperationalstatusJLabel.setText("Select operational status.");
            isValid = false;
        } else {
            errorOperationalstatusJLabel.setText("");
        }

        if (ValidatingFields.isStringTextFieldValid(currentLocationJTextField)) {
            errorCurrentLocationJLabel.setText("Enter valid values.");
            isValid = false;
        } else {
            errorCurrentLocationJLabel.setText("");
        }

        if (ValidatingFields.isNumberTextFieldValid(usabilityCountJTextField)) {
            errormaxUsabilityJLabel.setText("Invalid count value.");
            isValid = false;
        } else {
            errormaxUsabilityJLabel.setText("");
        }

        if (ValidatingFields.isStringTextFieldValid(reqDescriptionjTextArea)) {
            errorServiceReqJLabel.setText("Invalid input string.");
            isValid = false;
        } else {
            errorServiceReqJLabel.setText("");
        }

        if (ValidatingFields.isStringTextFieldValid(devicePositionJTextField)) {
            errorDevicepositionJLabel.setText("Input valid position.");
            isValid = false;
        } else {
            errorDevicepositionJLabel.setText("");
        }

        return isValid;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddDeviceJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox categoryJComboBox;
    private javax.swing.JTextField currentLocationJTextField;
    private javax.swing.JTextField deviceIdJTextField;
    private javax.swing.JTextField devicePositionJTextField;
    private javax.swing.JLabel errorCategoryJLabel;
    private javax.swing.JLabel errorCurrentLocationJLabel;
    private javax.swing.JLabel errorDevicepositionJLabel;
    private javax.swing.JLabel errorOperationalstatusJLabel;
    private javax.swing.JLabel errorProductJLabel;
    private javax.swing.JLabel errorServiceReqJLabel;
    private javax.swing.JLabel errormaxUsabilityJLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox operationalStatusJComboBox;
    private javax.swing.JComboBox productsJComboBox;
    private javax.swing.JTextArea reqDescriptionjTextArea;
    private javax.swing.JTextField usabilityCountJTextField;
    // End of variables declaration//GEN-END:variables
}
